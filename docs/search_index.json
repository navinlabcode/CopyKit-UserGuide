[
["index.html", "CopyKit User Guide 1 Introduction", " CopyKit User Guide Darlan Conterno Minussi Last revised: 2021-06-07 1 Introduction This is the user guide for the CopyKit package. CopyKit is a toolkit for single-cell analysis of copy number datasets. Copykit expands from the existing robust scaffold for single-cell analysis provided by the Bioconductor packages SingleCellExperiment and SummarizedExperiment and, provides the tools to perform binning of sequencing reads, segmentation as well as quality control and downstream analysis of scDNA-Seq datasets. CopyKit uses the Variable Binning (Baslan et al. 2012; Gao et al. 2016) pipeline to process datasets "],
["intro.html", "2 Introduction", " 2 Introduction "],
["parallelization.html", "3 Parallelization", " 3 Parallelization For all parallel calculations, CopyKit adopts the BiocParallel framework. Make sure to read the BiocParallel vignette to choose the best parameters for your machine. An example workflow can be done as follows: We use BiocParallel::register() function to register the number of workers desired. library(BiocParallel) register(MulticoreParam(workers = 40, progressbar = T), default = T) BiocParallel registered 40 process for parallelization of copykit functions. The default parameter can be confirmed with: BiocParallel::bpparam() ## class: MulticoreParam ## bpisup: FALSE; bpnworkers: 40; bptasks: 0; bpjobname: BPJOB ## bplog: FALSE; bpthreshold: INFO; bpstopOnError: TRUE ## bpRNGseed: ; bptimeout: 2592000; bpprogressbar: TRUE ## bpexportglobals: TRUE ## bplogdir: NA ## bpresultdir: NA ## cluster type: FORK The argument progressbar allows for a helpful progression bar while the process is being run. After this setup CopyKit parallelized functions will automatically recognize these parameters and run in parallel. It is highly recommended to run CopyKit using parallelization since some functions can take a long time to run otherwise. "]
]
